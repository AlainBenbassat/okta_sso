<?php

function okta_sso_menu() {
  $items = [];

  $items['okta_sso'] = [
    'title'            => t('Okta SSO'),
    'page callback'    => 'okta_sso_show',
    'access arguments' => ['access content'],
    'description' => t('Okta SSO'),
    'type' => MENU_CALLBACK,
  ];

  $items['okta_sso_callback'] = [
    'title'            => t('Okta SSO Callback'),
    'page callback'    => 'okta_sso_callback',
    'access arguments' => ['access content'],
    'description' => t('Okta SSO Callback'),
    'type' => MENU_CALLBACK,
  ];

  return $items;
}

function okta_sso_show() {
  global $user;
  $html = '<p>You are logged in</p>';

  try {
    if (!$user->uid) {
      // get the okta settings
      $oktaSsoSettings = okta_sso_check_settings();

      // get the meta data
      $metadata = okta_sso_http($oktaSsoSettings['metadata_uri']);

      // generate the login url
      $_SESSION['okta_sso_state'] = bin2hex(random_bytes(5));
      $loginURL = $metadata->authorization_endpoint . '?' . http_build_query([
        'response_type' => 'code',
        'client_id' => $oktaSsoSettings['client_id'],
        'redirect_uri' => $oktaSsoSettings['redirect_uri'],
        'state' => $_SESSION['okta_sso_state'],
      ]);
    
      $html = "<a href=\"$loginURL\">Log in</a>";
    }
  }
  catch (Exception $e) {
    $html = $e->getMessage();
  }

  return $html;
}

function okta_sso_check_settings() {
  $oktaSsoSettings = variable_get('okta_sso_settings');

  if (!$oktaSsoSettings) {
    $msg = "Please add the following code in your settings.php file.<br>
      <pre>
\$conf['okta_sso_settings'] = [
  'client_id' => 'SEE-YOUR-OKTA-DASHBOARD',
  'client_secret' => 'SEE-YOUR-OKTA-DASHBOARD',
  'redirect_url' => 'https://YOUR-SITE/okta_sso',
];
      </pre>";
    throw new Exception($msg);
  }
  
  return $oktaSsoSettings;
}

function okta_sso_callback() {
  try {
    // make sure we have a code in the query string
    if (!isset($_GET['code'])) {
      throw new Exception('Missing code');
    }

    // make sure the state matches
    if ($_SESSION['okta_sso_state'] != $_GET['state']) {
      throw new Exception('Bad state');
    }

    // get the okta settings
    $oktaSsoSettings = okta_sso_check_settings();

    // get the meta data
    $metadata = okta_sso_http($oktaSsoSettings['metadata_uri']);

    // exchange the code for an access token
    $response = okta_sso_http($metadata->token_endpoint, [
      'code' => $_GET['code'],
      'grant_type' => 'authorization_code',
      'client_id' => $oktaSsoSettings['client_id'],
      'client_secret' => $oktaSsoSettings['client_secret'],
      'redirect_uri' => $oktaSsoSettings['redirect_uri'],
    ]);

    // get the user info
    $token = okta_sso_http($metadata->introspection_endpoint, [
      'client_id' => $oktaSsoSettings['client_id'],
      'client_secret' => $oktaSsoSettings['client_secret'],
      'token' => $response->access_token,
    ]);

    if ($token->active) {
      // see if we know this user in Drupal
      $tmpuser = user_load_by_name($token->username);
      if ($tmpuser === FALSE) {
        throw new Exception('There is no account for ' . $token->username);
      }

      // make sure the user is active
      if ($tmpuser->is_active != -1) {
        throw new Exception('The user ' . $token->username . ' is blocked');
      }

      // we're all set, log in the user
      global $user;
      $user = user_load($tmpuser->uid);
      user_login_finalize(['name' => $user->name]);
      return '<p>You are logged in</p>';
    }

  }
  catch (Exception $e) {
    return '<p>' . $e->getMessage() . '</p>';
  }
}

function okta_sso_http($url, $params = FALSE) {
  $ch = curl_init($url);
  curl_setopt($ch, CURLOPT_RETURNTRANSFER, TRUE);
  if ($params) {
    curl_setopt($ch, CURLOPT_POSTFIELDS, http_build_query($params));
  }

  return json_decode(curl_exec($ch));
}

